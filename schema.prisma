datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Issue {
    id             Int                 @id
    node_id        String
    url            String
    repository_url String
    labels_url     String
    comments_url   String
    events_url     String
    html_url       String
    number         Int
    state          String
    state_reason   String?
    title          String
    body           String?
    user           UsersOnIssues[]
    labels         LabelsOnIssues[]
    assignee       User                @relation(fields: [assignee_id], references: [id])
    assignee_id    Int
    assignees      AssigneesOnIssues[]

    @@map("issues")
}

model UsersOnIssues {
    issue    Issue @relation(fields: [issue_id], references: [id])
    issue_id Int
    user     User  @relation(fields: [user_id], references: [id])
    user_id  Int

    @@id([issue_id, user_id])
    @@map("users_on_issues")
}

model User {
    users_on_issues           UsersOnIssues[]
    assignees_on_issues       AssigneesOnIssues[]
    login                     String
    id                        Int                 @id
    node_id                   String
    avatar_url                String
    gravatar_id               String?
    url                       String
    html_url                  String
    followers_url             String
    following_url             String
    gists_url                 String
    starred_url               String
    subscriptions_url         String
    organizations_url         String
    repos_url                 String
    events_url                String
    received_events_url       String
    type                      String
    site_admin                Boolean
    name                      String?
    company                   String?
    blog                      String?
    location                  String?
    email                     String?
    hireable                  Boolean?
    bio                       String?
    twitter_username          String?
    public_repos              Int
    public_gists              Int
    followers                 Int
    following                 Int
    created_at                DateTime
    updated_at                DateTime
    private_gists             Int
    total_private_repos       Int
    owned_private_repos       Int
    disk_usage                Int
    collaborators             Int
    two_factor_authentication Boolean
    plan                      Plan?
    suspended_at              String?
    business_plus             Boolean
    ldap_dn                   String

    Issue Issue[]
    @@map("users")
}

model LabelsOnIssues {
    issue    Issue @relation(fields: [issue_id], references: [id])
    issue_id Int
    label    Label @relation(fields: [label_id], references: [id])
    label_id Int

    @@id([issue_id, label_id])
    @@map("labels_on_issues")
}

model Label {
    issues      LabelsOnIssues[]
    id          Int              @id
    node_id     String
    url         String
    name        String
    description String?
    color       String
    default     Boolean
}

model AssigneesOnIssues {
    issue    Issue @relation(fields: [issue_id], references: [id])
    issue_id Int
    user     User  @relation(fields: [user_id], references: [id])
    user_id  Int

    @@id([issue_id, user_id])
    @@map("assignees_on_issues")
}

model Plan {
    user          User   @relation(fields: [user_id], references: [id])
    user_id       Int    @unique
    collaborators Int
    name          String
    space         Int
    private_repos Int
}
